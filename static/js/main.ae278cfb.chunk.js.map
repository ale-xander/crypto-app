{"version":3,"sources":["App/AppProvider.jsx","App/AppLayout.jsx","App/NavBar.jsx","Settings/Welcome.jsx","Shared/Styles.jsx","Settings/ConfirmButton.jsx","Shared/Page.jsx","Shared/Tile.jsx","Settings/CoinHeaderGrid.jsx","Shared/CoinImage.jsx","Settings/CoinTile.jsx","Settings/CoinGrid.jsx","Settings/Search.jsx","Settings/Favorites.jsx","Settings/index.js","Shared/Content.jsx","Dashboard/PriceTile.jsx","Dashboard/PriceGrid.jsx","Dashboard/CoinSpotlight.jsx","Dashboard/HighchartsConfig.js","Dashboard/ChartSelector.jsx","Dashboard/PriceChart.jsx","Dashboard/HighchartsTheme.js","Dashboard/index.js","App/index.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","global","fetch","require","cc","setApiKey","AppProvider","props","componentDidMount","console","log","fetchCoins","fetchPrices","fetchHistorical","a","coinList","Data","setState","addCoin","key","favorites","state","length","push","removeCoin","_","pull","isInFavorites","includes","setPage","page","confirmFavorites","currentFavorite","firstVisit","prices","historical","localStorage","setItem","JSON","stringify","setFilteredCoins","filteredCoins","filter","price","Object","keys","returnData","i","priceFull","priceData","warn","setCurrentFavorite","sym","parse","getItem","promises","units","priceHistorical","moment","subtract","timeInterval","toDate","Promise","all","results","name","data","map","ticker","index","valueOf","USD","toggleChart","value","savedSettings","cryptoCompareData","Provider","this","children","Component","styled","div","Bar","Logo","active","css","hidden","ControlButton","Consumer","className","lightBlueBackground","backgroundColor2","subtleBoxShadow","greenBoxShadow","ConfirmButtonStyled","CenterDiv","onClick","Tile","SelectableTile","DeletableTile","DisabledTile","CoinHeaderGridStyled","CoinSymbol","DeleteIcon","symbol","topSection","CoinImage","img","spotlight","coin","alt","src","ImageUrl","clickCoinHandler","coinKey","TileClass","CoinHeaderGrid","CoinName","Symbol","CoinGridStyled","getCoinsToDisplay","slice","getLowerSectionCoins","CoinTile","SearchGrid","SearchInput","input","filterCoins","e","inputValue","target","handleFilter","debounce","setFilterCoins","coinSymbols","coinNames","allStringsToSearch","concat","fuzzyResults","fuzzy","result","string","pickBy","symKey","coinName","onKeyUp","Page","Welcome","Favorites","CoinGrid","ConfirmButton","Search","JustifyRight","JustifyLeft","TickerPrice","ChangePct","red","numberFormat","number","PriceTileStyled","compact","ChangePercent","CHANGEPCT24HOUR","PriceTile","PRICE","PriceTileCompact","PriceGrid","SpotlightName","h2","title","text","yAxis","xAxis","type","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","pointStart","responsive","rules","condition","maxWidth","chartOptions","select","ReactHighcharts","Highcharts","setOptions","colors","chart","backgroundColor","linearGradient","x1","y1","x2","y2","stops","style","fontFamily","plotBorderColor","color","textTransform","fontSize","subtitle","gridLineColor","labels","lineColor","minorGridLineColor","tickColor","tickWidth","tooltip","dataLabels","marker","boxplot","fillColor","candlestick","errorbar","itemStyle","itemHoverStyle","itemHiddenStyle","credits","enabled","drilldown","activeAxisLabelStyle","activeDataLabelStyle","navigation","buttonOptions","symbolStroke","theme","fill","rangeSelector","buttonTheme","stroke","states","hover","inputBoxBorderColor","inputStyle","labelStyle","navigator","handles","borderColor","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","ChartSelector","defaultValue","onChange","config","highchartsConfig","ChartGrid","CoinSpotlight","PriceChart","App","AppLayout","NavBar","Content","Settings","Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ae278cfb.chunk.js","sourcesContent":["// state manager for the app\nimport React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment';\nexport const AppContext = React.createContext();\n\nglobal.fetch = require('node-fetch')\nconst cc = require('cryptocompare')\ncc.setApiKey('d455128ae090441e96c16dbd4db1660d3fd94ce1c5f47557d4f5b288e9b97b72')\nconst MAX_FAVORITES = 15;\nconst TIME_UNITS = 12; //days, weeks, months\n\nexport class AppProvider extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            page: 'my coins',\n            setPage: this.setPage,\n            ...this.savedSettings(),\n            confirmFavorites: this.confirmFavorites,\n            favorites: ['BTC', 'ETH', 'BCH','LINK','EOS', 'OKB','LTC','ETC', 'XLM', 'XMR'],\n            addCoin: this.addCoin,\n            removeCoin: this.removeCoin,\n            isInFavorites: this.isInFavorites,\n            setFilteredCoins: this.setFilteredCoins,\n            setCurrentFavorite: this.setCurrentFavorite,\n            toggleChart: this.toggleChart,\n            timeInterval: 'months'\n        }\n    }\n    // ------------------ Fetch the coins, prices and historical ------------------\n    componentDidMount = () => {\n        console.log('component did mount')\n        this.fetchCoins();\n        this.fetchPrices();\n        this.fetchHistorical();\n    }\n    \n    fetchCoins = async () => {\n        console.log('fetching coins')\n        let coinList = (await cc.coinList()).Data;\n            // console.log(coinList)\n        this.setState({coinList});\n    }\n    \n    //key = the coin we're adding\n    addCoin = key => {\n        //make a copy of the favorites array\n        let favorites = [...this.state.favorites];\n        if(favorites.length < MAX_FAVORITES){\n            favorites.push(key);\n            this.setState({favorites});\n        }\n        console.log(`adding ${key} coin`)\n    }\n\n    removeCoin = key => {\n        let favorites = [...this.state.favorites];\n        console.log(`removing ${key} coin`)\n        //pull value from array, return new array. new array of this value removed\n        this.setState({favorites: _.pull(favorites, key)})\n    }\n    \n    //check if coin is already in favorites. takes an array and and checks if key is in array\n    isInFavorites = key => _.includes(this.state.favorites, key)\n    \n\n    setPage = page => this.setState({page})\n    \n    confirmFavorites = ()=> {\n        console.log('confirm fav');\n        \n        let currentFavorite = this.state.favorites[0];\n\n        this.setState({\n            firstVisit: false,\n            page: 'my coins',\n            currentFavorite,\n            prices: null,\n            historical: null\n        },\n        () => {\n            this.fetchPrices();\n            this.fetchHistorical();\n        }\n        );\n\n        localStorage.setItem(\n            'cryptoData',\n            JSON.stringify({\n                // test: '<-- button works -->',\n                favorites: this.state.favorites,\n                //favorites: ['BTC']\n                currentFavorite\n            }),\n        )\n    }\n\n    //save settings to local storage for repeat visitors\n    savedSettings(){\n        let cryptoCompareData = JSON.parse(localStorage.getItem('cryptoData'));\n        //if we don't have data, return first visit default data\n        if(!cryptoCompareData){\n            return {page: 'coin selector', firstVisit: true}\n            //firstVisit: boolean to keep track if user has been here before\n        }\n        //let favorites = ['BTC']\n        let {favorites, currentFavorite} = cryptoCompareData;\n        //if we do have data:\n        return {favorites, currentFavorite};\n    }\n    \n    //set the coins that match the search criteria to state\n    setFilteredCoins = (filteredCoins) => this.setState({filteredCoins})\n\n    //get coin prices\n    fetchPrices = async () => {\n        //don't fetch prices before you have favorites\n        if(this.state.firstVisit) return;\n        \n        //return a promise array; wait for prices() to resolve\n        let prices = await this.prices();\n        console.log('prices')\n        console.log(prices)\n        prices = prices.filter(price => Object.keys(price).length);\n        this.setState({prices});\n    }\n    \n    //get price from CryptoCompare\n    prices = async () => {\n        let returnData = [];\n        for(let i = 0; i < this.state.favorites.length; i++){\n            try {\n                let priceData = await cc.priceFull(this.state.favorites[i], 'USD');\n                returnData.push(priceData);\n            } \n            catch (e){\n                console.warn('Fetch price error: ', e);\n            }\n        }\n        return returnData;\n    }\n\n    setCurrentFavorite = (sym) => {\n        this.setState({\n            currentFavorite: sym,\n            //to avoid re-rendring with old data, clear old data\n            historical: null\n        }, this.fetchHistorical);\n    \n        localStorage.setItem('cryptoData', JSON.stringify({\n            ...JSON.parse(localStorage.getItem('cryptoData')),\n            currentFavorite: sym\n        }))\n    }\n\n    //get historical data, push to Promises (10), resolve when all 10 promises have resolved.\n    historical = () => {\n        let promises = [];\n        for (let units = TIME_UNITS; units > 0; units--){\n            promises.push(\n                cc.priceHistorical(\n                    this.state.currentFavorite,\n                    ['USD'],\n                    moment()     //new moment = today\n                    .subtract({[this.state.timeInterval]: units})\n                    .toDate()   //to put it in JS data\n                )\n            )\n        }\n        console.log('monent', moment())\n        return Promise.all(promises);\n    }\n\n    fetchHistorical = async () => {\n        if (this.state.firstVisit) return;\n        let results = await this.historical();\n        console.log(`10 units of historical data: `, results);\n        let historical = [\n            {\n                name: this.state.currentFavorite,\n                data: results.map((ticker, index) => [\n                    moment().subtract({[this.state.timeInterval]: TIME_UNITS - index}).valueOf(), ticker.USD\n                ])\n            }\n        ]\n        this.setState({historical});\n    }\n\n    //change the time unit from here. value = new time unit\n    toggleChart = (value) => {\n        //console.log(value);\n        this.setState({timeInterval: value, historical: null}, this.fetchHistorical);\n    }\n\n    //give the children access to provider\n    render() {\n        return (\n            <AppContext.Provider value={this.state}>\n                {this.props.children}\n            </AppContext.Provider>\n        );\n    }\n}\n\n","import styled from 'styled-components';\n\nexport default styled.div`\npadding: 40px\n`","import React from 'react';\nimport styled, {css} from 'styled-components';\nimport {AppContext} from \"./AppProvider\";\n\nconst Bar = styled.div`\n    display:grid;\n    grid-template-columns: 100px auto 100px 100px;\n    margin-bottom: 40px;\n`;\n\nfunction toProperCase(lower){\n    return lower.charAt(0).toUpperCase() + lower.substr(1)\n};\n\nconst Logo = styled.div`\n    font-size: 2em;\n`;\n\nconst ControlButtonElement = styled.div`\n    cursor: pointer; \n    ${props => props.active && css`\n    text-shadow: 0px 0px 60px #03ff03;\n    `}\n    ${props => props.hidden && css`\n    display: none; \n    `}\n`;\n// a functional component that's a wrapper for the buttons\nfunction ControlButton({name}) {\n    return(\n        // <AppContext.Consumer>\n        //     <ControlButtonElement active={active}>\n        //         {toProperCase(name)}\n        //     </ControlButtonElement>\n        // </AppContext.Consumer>\n\n        <AppContext.Consumer>\n            {({firstVisit, page, setPage}) =>(\n            <ControlButtonElement \n                active = {page === name}\n                onClick = {() => setPage(name)}\n                hidden = {firstVisit && name === 'my coins'}\n            >\n                {toProperCase(name)}\n            </ControlButtonElement>\n            )}\n        </AppContext.Consumer>\n      \n    )\n};\n\nexport default function () {\n    return (\n        <Bar>\n            <Logo>Logo_here</Logo>\n            <div/>\n            <ControlButton active name=\"my coins\"/>\n            <ControlButton name=\"coin selector\"/>\n        </Bar>\n    )\n}","import React from 'react'\nimport { AppContext } from '../App/AppProvider'\n\nexport default function () {\n  return (\n    <>\n      <AppContext.Consumer>\n        {({ firstVisit }) =>\n          firstVisit \n          ? (\n              <>\n                <div>\n                    Here are some popular crypto currencies. \n                    You can add more to your Favorites by searching below and clicking on the ones you want.{' '}\n                </div>\n                <div className='spacer'> </div>\n              </>\n            ) \n          : null\n        }\n      </AppContext.Consumer>\n    </>\n  )\n}\n","\nconst theme = 'dark';\n//const theme = 'light';\nexport const lightTheme = theme === 'light';\n\nexport const color = lightTheme ? 'white' : '#061a44';\nexport const color2 = lightTheme ? 'white' : 'darkgrey';\nexport const color3 = lightTheme ? '#09f010' : '#42ff3a';\n\nif (lightTheme) {\n  document.body.style.background = '#e1eaee';\n  document.body.style.color = '#061a44';\n}\n\nexport const lightBlueBackground = `background-color: ${color}`;\nexport const backgroundColor2 = `background-color: ${color2};`;\nexport const greenBackgroundColor = `background-color: ${color3};`;\n\nexport const fontColorGreen = `color: #03A9F4`;\nexport const fontColorWhite = `color: white`;\nexport const subtleBoxShadow = `box-shadow: 0px 0px 5px 1px ${lightTheme ? '#a9b6ff' : '#121d5b'}`;\nexport const greenBoxShadow = `box-shadow: 0px 0px 4px 2px #5fff17`;\nexport const redBoxShadow = `box-shadow: 0px 0px 2px 2px #e41111`;\n\nexport const fontSizeBig = 'font-size: 2em';\nexport const fontSize1 = 'font-size: 1.5em;';\nexport const fontSize2 = 'font-size: 1.0em';\nexport const fontSize3 = 'font-size: .75em';\n\nexport const textAlignCenter = 'text-align: center;';\n","import React from 'react';\nimport styled from 'styled-components';\nimport {AppContext} from '../App/AppProvider'\nimport {fontSize1, greenBoxShadow, color3} from \"../Shared/Styles\";\n\nconst ConfirmButtonStyled = styled.div`\n  margin: 20px;\n  color: ${color3}\n  ${fontSize1} \n  padding: 5px;\n  cursor: pointer; \n  &:hover {\n    ${greenBoxShadow} \n  }\n`\nexport const CenterDiv = styled.div`\n    display: grid;\n    justify-content: center;\n`\n\n\nexport default function () {\n    return(\n        <AppContext.Consumer>\n            {({confirmFavorites}) => \n                <CenterDiv>\n                    <ConfirmButtonStyled onClick={confirmFavorites}>\n                        Confirm Your Coin Selection\n                    </ConfirmButtonStyled>\n                </CenterDiv>\n            }\n        </AppContext.Consumer>\n    )\n}\n\n","import React from 'react';\nimport {AppContext} from \"../App/AppProvider\";\n\nexport default function ({name, children}) {\n    return (<AppContext.Consumer>\n        {({page}) => {\n        if (page !== name) {\n            return null;\n        }\n        return <div> {children} </div>;\n        }}\n    </AppContext.Consumer>\n    )\n}\n","import styled from 'styled-components';\nimport {subtleBoxShadow, lightBlueBackground, greenBoxShadow, redBoxShadow} from \"./Styles\";\n\nexport const Tile = styled.div`\n    ${subtleBoxShadow}\n    ${lightBlueBackground}\n    padding: 10px;   \n`\n\nexport const SelectableTile = styled(Tile)`\n    &:hover {\n    cursor: pointer; \n    ${greenBoxShadow}\n}\n`\n\nexport const DeletableTile = styled(SelectableTile)`\n\t&:hover{\n\t\tcursor: pointer; \n\t\t${redBoxShadow}\n\t}\n`;\n\nexport const DisabledTile = styled(Tile)`\n\tpointer-events: none;\n  opacity: 0.4;\n`;\n","import React from 'react';\nimport styled from \"styled-components\";\nimport {DeletableTile} from '../Shared/Tile';\nimport {fontSize3} from '../Shared/Styles'\n\nexport const CoinHeaderGridStyled = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n`;\n\nexport const CoinSymbol = styled.div`\n    justify-self: right;\n    ${fontSize3}\n`;\n\nconst DeleteIcon = styled.div`\n    justify-self: right;\n    display: none; \n    ${DeletableTile}:hover & {\n    display: block;\n    color: red;\n    }\n`;\n\n\nexport default function ({name, symbol, topSection}) {\n    return (\n    <CoinHeaderGridStyled>\n        <div> {name} </div>\n        {topSection \n            ? (<DeleteIcon> X </DeleteIcon>)\n            : (<CoinSymbol> {symbol} </CoinSymbol>)\n        }\n        \n    </CoinHeaderGridStyled>\n    )\n}\n","import React from 'react';\nimport styled, {css} from 'styled-components';\n\nconst CoinImage = styled.img`\n  height: 50px; \n  ${props => props.spotlight && css`\n    height: 200px; \n    margin: auto; \n    display: block; \n  `}\n`\n\nexport default function ({coin, spotlight}) {\n  return (\n    <CoinImage\n      spotlight={spotlight}\n      alt={coin.CoinSymbol}\n      src={`http://cryptocompare.com/${coin.ImageUrl}`}/>\n  )\n}\n","import React from 'react';\nimport {AppContext} from \"../App/AppProvider\";\nimport {SelectableTile, DeletableTile, DisabledTile} from \"../Shared/Tile\";\nimport CoinHeaderGrid from './CoinHeaderGrid';\nimport CoinImage from '../Shared/CoinImage';\n\nfunction clickCoinHandler(topSection, coinKey, addCoin, removeCoin){\n  return topSection \n  ? () => {\n    removeCoin(coinKey)\n  } \n  : () => {\n    addCoin(coinKey)\n  }\n}\n\nexport default function({coinKey, topSection}){\n    return (\n    <AppContext.Consumer>\n      {({coinList, addCoin, removeCoin, isInFavorites}) => {\n        //this is the coin object that has coin name, image url, properties, etc\n        let coin = coinList[coinKey];\n  \n        let TileClass = SelectableTile;\n        if(topSection){\n            TileClass = DeletableTile;\n            }\n        else if(isInFavorites(coinKey)){\n          TileClass = DisabledTile\n        }\n        return (\n            <TileClass onClick={clickCoinHandler(topSection, coinKey, addCoin, removeCoin)}> \n                <CoinHeaderGrid \n                  topSection={topSection} \n                  name={coin.CoinName} \n                  symbol={coin.Symbol} \n                />\n                <CoinImage coin={coin} />\n            </TileClass>\n        )\n      }}\n    </AppContext.Consumer>\n  )\n}\n  ","import React from 'react';\nimport styled from 'styled-components';\nimport {AppContext} from \"../App/AppProvider\";\nimport CoinTile from './CoinTile'\n\nexport const CoinGridStyled = styled.div`\n  display: grid;   \n  grid-template-columns: repeat(auto-fill, minmax(130px, 1fr));\n  grid-gap: 15px; \n  margin-top: 40px; \n`\nfunction getCoinsToDisplay(coinList, topSection, favorites, filteredCoins){\n  //return topSection ? favorites : getLowerSectionCoins(coinList, filterCoins);\n  // return Object.keys(coinList).slice(0, topSection ? 10 : 100) //list only the first 100\n  return topSection\n  ? favorites\n  // : Object.keys(coinList).slice(0, 5)\n  : getLowerSectionCoins(coinList, filteredCoins)\n}\n\nfunction getLowerSectionCoins(coinList, filteredCoins){\n  return (filteredCoins && Object.keys(filteredCoins)) ||\n    Object.keys(coinList).slice(0, 250)\n}\n\n\nexport default function ({topSection}){\n  return (\n    <AppContext.Consumer>\n    {({coinList, favorites, filteredCoins}) => (\n      <CoinGridStyled>\n            {getCoinsToDisplay(coinList, topSection, favorites, filteredCoins).map(coinKey => \n              <CoinTile key={coinKey} topSection={topSection} coinKey={coinKey} />\n            )}\n        \n      </CoinGridStyled>\n    )}\n  </AppContext.Consumer>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { fontSize2} from \"../Shared/Styles\";\nimport {AppContext} from \"../App/AppProvider\";\nimport _ from 'lodash';\nimport fuzzy from 'fuzzy';\n\nconst SearchGrid = styled.div`\n    display: grid; \n    grid-template-columns: 200px 1fr; \n`\nconst SearchInput = styled.input`\n    \n    ${fontSize2}\n    border: 1px solid; \n    height: 25px; \n    color: black;\n    place-self: center left; \n`\nfunction filterCoins(e, setFilteredCoins, coinList){\n    //get value of event\n    let inputValue = e.target.value;\n        //console.log(`input from search ${inputValue}`)\n    \n        //if you clear the search it should go back to all the results\n    if(!inputValue){\n        setFilteredCoins(null);\n        return;\n    }\n    handleFilter(inputValue, coinList, setFilteredCoins);\n}\n\n//prevent user from firing off too many events (too many fitering operations in a row)\nconst handleFilter = _.debounce((inputValue, coinList, setFilterCoins) => {\n    //console.log(`input value in debounce func ${inputValue}`)\n    // Get all the coin symbols\n    let coinSymbols = Object.keys(coinList);\n    // Get all the coin names, map symbol to name\n    let coinNames = coinSymbols.map(sym => coinList[sym].CoinName)\n    let allStringsToSearch = coinSymbols.concat(coinNames);\n    //console.log(allStringsToSearch)\n\n    let fuzzyResults = fuzzy\n        .filter(inputValue, allStringsToSearch, {})\n        .map(result => result.string);\n    //console.log(fuzzyResults)\n\n    //separate coin names from coin symbols. pick names of coins from coinlist and set back to app as filtered coins\n    let filteredCoins = _.pickBy(coinList, (result, symKey) => {\n        let coinName = result.CoinName;\n        return (_.includes(fuzzyResults, symKey) || _.includes(fuzzyResults, coinName));\n    });\n    // console.log(`filtered coins`)\n    // console.log(filteredCoins)\n    setFilterCoins(filteredCoins)\n\n}, 500);\n\nexport default function () {\n    return (\n        <AppContext.Consumer>\n            {({setFilteredCoins, coinList}) =>\n                <SearchGrid onKeyUp={(e) => filterCoins(e, setFilteredCoins, coinList)}> \n                    Search all coins \n                    <SearchInput onKeyUp={(e) => filterCoins(e, setFilteredCoins, coinList)}/>\n                </SearchGrid>\n            }\n        </AppContext.Consumer>\n    )\n}","import React from 'react';\n\nexport default function () {\n    return(\n        <div>\n            FAVORITES\n        </div>\n    )\n} ","import React from 'react';\nimport Welcome from './Welcome';\nimport ConfirmButton from './ConfirmButton';\nimport Page from '../Shared/Page';\nimport CoinGrid from './CoinGrid';\nimport Search from './Search'\nimport Favorites from './Favorites'\n\nexport default function(){\n    return(\n        <Page name=\"coin selector\">\n            <Welcome />\n            <Favorites />\n            <CoinGrid topSection />\n            <ConfirmButton />\n            <Search />\n            <CoinGrid />\n        </Page>\n    )\n}","import React from 'react';\nimport {AppContext} from \"../App/AppProvider\";\n\n//if coinlist is undefined, show loader, otherwise the normal children. Settings won't render until we have coins\nexport default function(props){\n  return <AppContext.Consumer>\n    {({coinList, prices, firstVisit}) => {\n      if(!coinList){\n        return <div> Loading Coins </div>\n      }\n      if(!firstVisit && !prices){\n        return <div> Loading Prices </div>\n      }\n      return <div> {props.children} </div>\n    }}\n  </AppContext.Consumer>\n}\n","import React from 'react';\nimport styled, {css} from 'styled-components';\nimport {SelectableTile} from \"../Shared/Tile\";\nimport {fontSize3, fontSizeBig, greenBoxShadow} from \"../Shared/Styles\";\nimport {CoinHeaderGridStyled} from \"../Settings/CoinHeaderGrid\";\nimport { AppContext } from \"../App/AppProvider\";\n\nconst JustifyRight = styled.div`\n    justify-self: right; \n`\n\nconst JustifyLeft = styled.div`\n    justify-self: left; \n`\n\nconst TickerPrice = styled.div`\n    ${fontSizeBig};\n`\n\nconst ChangePct = styled.div`\n    color: green; \n    ${props => props.red && css`\n        color: red; \n    `}\n`\n\nconst numberFormat = number => {\n    return +(number + '').slice(0, 6);\n}\n\nconst PriceTileStyled = styled(SelectableTile)`\n    ${props => props.compact && css`\n        display: grid; \n        ${fontSize3}\n        grid-gap: 5px; \n        grid-template-columns: repeat(3, 1fr); \n        justify-items: right; \n    `}\n    \n    ${props => props.currentFavorite && css`\n        ${greenBoxShadow}\n        pointer-events: none; \n    `}\n`\n\nfunction ChangePercent({data}){\n    return (\n        <JustifyRight>\n        <ChangePct red={data.CHANGEPCT24HOUR < 0}>\n            {numberFormat(data.CHANGEPCT24HOUR)}%\n        </ChangePct>\n        </JustifyRight>\n    );\n}\n\nfunction PriceTile({sym, data, currentFavorite, setCurrentFavorite}){\n    return (\n        <PriceTileStyled \n            currentFavorite={currentFavorite}\n            onClick={setCurrentFavorite}>\n        <CoinHeaderGridStyled>\n            <> {sym} </>\n            <ChangePercent data={data}/>\n        </CoinHeaderGridStyled>\n        <TickerPrice>\n            ${numberFormat(data.PRICE)}\n        </TickerPrice>\n        </PriceTileStyled>\n    );\n}\n\nfunction PriceTileCompact({sym, data, currentFavorite, setCurrentFavorite}){\n    return (\n    <PriceTileStyled \n        onClick={setCurrentFavorite}\n        compact \n        currentFavorite={currentFavorite}>\n        <JustifyLeft> {sym} </JustifyLeft>\n        <ChangePercent data={data}/>\n        <>\n            ${numberFormat(data.PRICE)}\n        </>\n    </PriceTileStyled>\n)}\n\nexport default function({price, index}){\n    let sym = Object.keys(price)[0];\n    let data = price[sym]['USD'];\n    let TileClass = index < 5 \n        ? PriceTile \n        : PriceTileCompact;\n    \n    return (\n        <AppContext.Consumer>\n            {\n                ({currentFavorite, setCurrentFavorite}) => \n                    <TileClass \n                        sym={sym} \n                        data={data}\n                        currentFavorite={currentFavorite === sym}\n                        //must be an arrow func b/c othwerwise it won't pass the symbol\n                        //set the current favorite to be the symbol\n                        setCurrentFavorite={() => setCurrentFavorite(sym)}>\n                    </TileClass>\n                \n            }\n        </AppContext.Consumer>\n    )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport {AppContext} from \"../App/AppProvider\";\nimport PriceTile from './PriceTile';\n\nconst PriceGrid = styled.div`\n    display: grid; \n    grid-template-columns: repeat(5, 1fr); \n    grid-gap: 15px; \n    margin-top: 40px; \n`\n\nexport default function () {\n    \n    return (\n        <AppContext.Consumer>\n            {\n                ({prices}) => (\n                    <PriceGrid>\n                        {prices.map((price, index) => (\n                            <PriceTile key={`priceTile-${index}`} index={index} price={price} />\n                        ))}\n                    </PriceGrid>\n                )\n            }\n        </AppContext.Consumer>\n    );\n\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport {Tile} from \"../Shared/Tile\";\nimport {AppContext} from \"../App/AppProvider\";\nimport CoinImage from '../Shared/CoinImage';\n\nconst SpotlightName = styled.h2`\n    text-align: center; \n`\n//pull off the curr fav and image \nexport default function (){\n    return (\n        <AppContext.Consumer>\n        {({currentFavorite, coinList}) =>\n            <Tile>\n                <SpotlightName> {coinList[currentFavorite].CoinName} </SpotlightName>\n                <CoinImage spotlight coin={coinList[currentFavorite]}/>\n            </Tile>\n        }\n      </AppContext.Consumer>\n    )\n}\n","export default function (historical) {\n  return {\n    title: {\n      text: 'Coin Price'\n    },\n\n    /* subtitle: {\n      text: 'Source: thesolarfoundation.com'\n    }, */\n\n    yAxis: {\n      title: {\n        text: 'Price'\n      }\n    },\n\n    xAxis: {\n      type: 'datetime'\n    },\n\n    legend: {\n      layout: 'vertical',\n      align: 'right',\n      verticalAlign: 'middle'\n    },\n\n    plotOptions: {\n      series: {\n        label: {\n          connectorAllowed: false\n        },\n        pointStart: 2010\n      }\n    },\n\n    series: historical,\n\n    responsive: {\n      rules: [\n        {\n          condition: {\n            maxWidth: 500\n          },\n          chartOptions: {\n            legend: {\n              layout: 'horizontal',\n              align: 'center',\n              verticalAlign: 'bottom'\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n","import styled from 'styled-components';\nimport {backgroundColor2, fontSize2} from \"../Shared/Styles\";\n\nexport default styled.select`\n    ${backgroundColor2}\n    ${fontSize2}\n    color: white; \n    border: 1px solid;\n    float: right; \n`;\n\n","import highchartsConfig from './HighchartsConfig'\nimport React from 'react'\nimport { Tile } from '../Shared/Tile'\nimport { AppContext } from '../App/AppProvider'\nimport ReactHighcharts from 'react-highcharts'\nimport HighchartsTheme from './HighchartsTheme'\nimport ChartSelector from './ChartSelector'\nReactHighcharts.Highcharts.setOptions(HighchartsTheme);\n\nexport default function () {\n    return (\n        <AppContext.Consumer>\n            {\n            ({historical, toggleChart}) => \n                <Tile>\n                    <ChartSelector\n                    defaultValue=\"months\"\n                    onChange={e => toggleChart(e.target.value)}\n                    >\n                        <option value='days'>Days</option>\n                        <option value='weeks'>Weeks</option>\n                        <option value='months'>Months</option>\n                    </ChartSelector>\n                    {/* <ReactHighcharts config={highchartsConfig(historical)} /> */}\n                    {historical //if no historical data, show loading indicator while fetching\n                        ? <ReactHighcharts config={highchartsConfig(historical)}/>\n                        : <div> Loading Historical Data </div>\n                    }\n                </Tile>\n            }\n        </AppContext.Consumer>\n    )\n}\n","export default {\n    colors: ['#2b908f', '#90ee7e', '#f45b5b', '#7798BF', '#aaeeee', '#ff0066',\n        '#eeaaee', '#55BF3B', '#DF5353', '#7798BF', '#aaeeee'],\n    chart: {\n        backgroundColor: {\n            linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n            stops: [\n                [0, '#2a2a2b'],\n                [1, '#3e3e40']\n            ]\n        },\n        style: {\n            fontFamily: '\\'Unica One\\', sans-serif'\n        },\n        plotBorderColor: '#606063'\n    },\n    title: {\n        style: {\n            color: '#E0E0E3',\n            textTransform: 'uppercase',\n            fontSize: '20px'\n        }\n    },\n    subtitle: {\n        style: {\n            color: '#E0E0E3',\n            textTransform: 'uppercase'\n        }\n    },\n    xAxis: {\n        gridLineColor: '#707073',\n        labels: {\n            style: {\n                color: '#E0E0E3'\n            }\n        },\n        lineColor: '#707073',\n        minorGridLineColor: '#505053',\n        tickColor: '#707073',\n        title: {\n            style: {\n                color: '#A0A0A3'\n            }\n        }\n    },\n    yAxis: {\n        gridLineColor: '#707073',\n        labels: {\n            style: {\n                color: '#E0E0E3'\n            }\n        },\n        lineColor: '#707073',\n        minorGridLineColor: '#505053',\n        tickColor: '#707073',\n        tickWidth: 1,\n        title: {\n            style: {\n                color: '#A0A0A3'\n            }\n        }\n    },\n    tooltip: {\n        backgroundColor: 'rgba(0, 0, 0, 0.85)',\n        style: {\n            color: '#F0F0F0'\n        }\n    },\n    plotOptions: {\n        series: {\n            dataLabels: {\n                color: '#F0F0F3',\n                style: {\n                    fontSize: '13px'\n                }\n            },\n            marker: {\n                lineColor: '#333'\n            }\n        },\n        boxplot: {\n            fillColor: '#505053'\n        },\n        candlestick: {\n            lineColor: 'white'\n        },\n        errorbar: {\n            color: 'white'\n        }\n    },\n    legend: {\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        itemStyle: {\n            color: '#E0E0E3'\n        },\n        itemHoverStyle: {\n            color: '#FFF'\n        },\n        itemHiddenStyle: {\n            color: '#606063'\n        },\n        title: {\n            style: {\n                color: '#C0C0C0'\n            }\n        }\n    },\n    credits: {\n      enabled: false\n    },\n    labels: {\n        style: {\n            color: '#707073'\n        }\n    },\n    drilldown: {\n        activeAxisLabelStyle: {\n            color: '#F0F0F3'\n        },\n        activeDataLabelStyle: {\n            color: '#F0F0F3'\n        }\n    },\n    navigation: {\n        buttonOptions: {\n            symbolStroke: '#DDDDDD',\n            theme: {\n                fill: '#505053'\n            }\n        }\n    },\n    // scroll charts\n    rangeSelector: {\n        buttonTheme: {\n            fill: '#505053',\n            stroke: '#000000',\n            style: {\n                color: '#CCC'\n            },\n            states: {\n                hover: {\n                    fill: '#707073',\n                    stroke: '#000000',\n                    style: {\n                        color: 'white'\n                    }\n                },\n                select: {\n                    fill: '#000003',\n                    stroke: '#000000',\n                    style: {\n                        color: 'white'\n                    }\n                }\n            }\n        },\n        inputBoxBorderColor: '#505053',\n        inputStyle: {\n            backgroundColor: '#333',\n            color: 'silver'\n        },\n        labelStyle: {\n            color: 'silver'\n        }\n    },\n    navigator: {\n        handles: {\n            backgroundColor: '#666',\n            borderColor: '#AAA'\n        },\n        outlineColor: '#CCC',\n        maskFill: 'rgba(255,255,255,0.1)',\n        series: {\n            color: '#7798BF',\n            lineColor: '#A6C7ED'\n        },\n        xAxis: {\n            gridLineColor: '#505053'\n        }\n    },\n    scrollbar: {\n        barBackgroundColor: '#808083',\n        barBorderColor: '#808083',\n        buttonArrowColor: '#CCC',\n        buttonBackgroundColor: '#606063',\n        buttonBorderColor: '#606063',\n        rifleColor: '#FFF',\n        trackBackgroundColor: '#404043',\n        trackBorderColor: '#404043'\n    }\n};","import React from 'react';\nimport Page from '../Shared/Page';\nimport PriceGrid from './PriceGrid';\nimport CoinSpotlight from './CoinSpotlight'\nimport styled from 'styled-components';\nimport PriceChart from './PriceChart'\n\nconst ChartGrid = styled.div`\n    display: grid; \n    margin-top: 20px; \n    grid-gap: 15px; \n    grid-template-columns: 1fr 3fr; \n`\n\nexport default function(){\n    return(\n        <Page name=\"my coins\">\n            <PriceGrid />\n            <ChartGrid>\n                <CoinSpotlight />\n                <PriceChart />\n            </ChartGrid>\n        </Page>\n    )\n}","import React, {Component} from 'react';\nimport './App.css';\n\nimport AppLayout from './AppLayout';\nimport NavBar from './NavBar';\nimport {AppProvider} from './AppProvider';\nimport Settings from '../Settings';\nimport Content from '../Shared/Content';\nimport Dashboard from '../Dashboard'\n\nclass App extends Component {\n  render() {\n    return (\n      <AppLayout>\n        <AppProvider>\n          <NavBar/>\n          <Content>\n            <Settings />\n            <Dashboard />\n          </Content>\n        </AppProvider>\n      </AppLayout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}